#! /bin/bash

# USAGE:
#
#    ./run-scenarios [-b] [TEST_CASES]
#
#  -b: rewrite baselines
#
#  TEST_CASES defaults to tests/scenarios/*

TEST=1

root_dir=$(dirname $0)
regress_dir=$root_dir/tests/scenarios
run=$root_dir/target/release/run-scenario

if [[ $1 == '-b' ]]; then
  write_bl=1
  shift
fi
if [[ $# -eq 0 ]]; then
  files=$regress_dir/*.txt
else
  files=$(find $@ | grep -E '.txt$')
fi

cargo build --release

exit_code=0

echo
for file in $files; do
  if ! [ -f $file ] ; then
    echo "Can't find file '$file'"
    exit 1
  fi
  bl=${file}.baseline
  base=$(basename $file)
  printf "%-40s " "${base}:"
  # Diffing baselines
  if [ -z $write_bl ] ; then
    # Has a baseline
    if [ -f $bl ] ; then
      diff $bl <($run $file 2>${file}.err) > ${file}.diff
      if [[ $? -eq 0 ]] ; then
        printf "\e[1;32m%-6s\e[0m\n" PASSED
      else
        printf "\e[1;31m%-6s\e[0m\n" FAILED
        exit_code=1
        cat ${file}.diff
        if [ -s ${file}.err ]; then
          echo "-- STDERR --"
          cat ${file}.err
        fi
      fi
      rm ${file}.diff
      rm ${file}.err
    else
      printf "\e[1;33m%-6s\e[0m\n" 'BASELINE MISSING'
    fi
  # Writing baselines
  else
    $run $file > $bl
    if [[ $? -eq 0 ]] ; then
      printf "\e[1;34m%-9s\e[0m\n" BASELINED
    fi
  fi
done
echo

exit $exit_code
